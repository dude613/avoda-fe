#Generated by OPENAI
name: PR Analysis with OpenAI

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract PR diff
        run: |
          # Fetch the base branch diff for comparison
          git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1
          # Save the diff between base and current PR head to a file
          git diff origin/${{ github.event.pull_request.base.ref }} > pr.diff
          cat pr.diff

      - name: Call OpenAI API for analysis
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # 1) Convert the entire diff into a JSON-escaped string
          ESCAPED_DIFF=$(jq -R -s . < pr.diff)

          # 2) Build a valid JSON payload via jq
          PAYLOAD=$(jq -n \
            --arg model "o3-mini" \
            --arg diff "$ESCAPED_DIFF" \
            '{
              "model": $model,
              "messages": [
                {
                  "role": "user",
                  "content": "You are a seasoned code reviewer. Please analyze the following code diff and provide a detailed review. Format your response in Markdown with the following structure:

                    ## Code Review Analysis

                    Summary:
                    Provide a concise overview of the changes introduced in the diff. Make it look nice for github comment (markdown only). Just output the response, no additional comments. We are using React19 with tailwindv4"

                    Detailed Observations:

                    List key issues and high level potential bugs in bullet points.

                    Suggestions for Improvement:
                    Provide actionable recommendations to improve the code quality, including fixes and best practices.

                    $diff
                }
              ]
            }'

            echo $PAYLOAD | jq

          # 3) Call OpenAI API
          curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d "$PAYLOAD" > openai_response.json

         # 4) Print the response
          cat openai_response.json

      - name: Post analysis as PR review comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const response = JSON.parse(fs.readFileSync('openai_response.json', 'utf8'));
            const analysis = response.choices && response.choices[0].message.content;
            if (analysis) {
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                event: 'COMMENT',
                body: "### OpenAI Analysis:\n" + analysis.trim()
              });
            } else {
              console.log("No analysis returned from OpenAI.");
            }
